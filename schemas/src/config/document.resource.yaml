# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema
$schema:     https://json-schema.org/draft/2020-12/schema
$id:         <HOST>/<PREFIX>/<VERSION>/config/document.resource.yaml
title:       DSC Resource instance
description: Defines an instance of a DSC Resource in a configuration.

type: object
required:
  - type
  - name
properties:
  type:
    $ref: /<PREFIX>/<VERSION>/definitions/resourceType.yaml
  name:
    $ref: /<PREFIX>/<VERSION>/definitions/instanceName.yaml
  dependsOn:
    title: Instance depends on
    description: >-
      Defines a list of DSC Resource instances that DSC must successfully process before processing
      this instance. Each value for this property must be the `resourceID()` lookup for another
      instance in the configuration. Multiple instances can depend on the same instance, but every
      dependency for an instance must be unique in that instance's `dependsOn` property.
    type: array
    items:
      type: string
      uniqueItems: true
      pattern: ^\[resourceId\(\s*'\w+(\.\w+){0,2}\/\w+'\s*,\s*'[a-zA-Z0-9 ]+'\s*\)\]$
      # VS Code only
      patternErrorMessage: |
        Invalid value, must be a value like `[resourceId('<type>', '<name>`)], such as
        `[resourceId('Microsoft/OSInfo', 'Foo')]`.

        The `<type>` and `<name>` should be the fully qualified type of the resource and its
        friendly name in the configuration.
    markdownDescription: |
      > [Online Documentation][01]

      Defines a list of DSC Resource instances that DSC must successfully process before processing
      this instance. Each value for this property must be the `resourceID()` lookup for another
      instance in the configuration. Multiple instances can depend on the same instance, but every
      dependency for an instance must be unique in that instance's `dependsOn` property.

      The `resourceID()` function uses this syntax:

      ```yaml
      "[resourceId('<resource-type-name>', '']<instance-name>"
      ```

      The `<resource-type-name>` value is the `type` property of the dependent resource and
      `<instance-name>` is the dependency's `name` property. When adding a dependency in a
      YAML-format configuration document, always wrap the `resourceID()` lookup in double quotes
      (`"`).

      [01]: https://learn.microsoft.com/powershell/dsc/reference/schemas/config/resource?view=dsc-3.0&preserveView=true#properties-1
  properties:
    title: Managed instance properties
    description: >-
      Defines the properties of the DSC Resource this instance manages. This property's value must
      be an object. DSC validates the property's value against the DSC Resource's schema.
    type: object
    # VS Code only
    markdownDescription: |
      > [Online Documentation][01]

      Defines the properties of the DSC Resource this instance manages. This property's value must
      be an object. DSC validates the property's value against the DSC Resource's schema.

      [01]: https://learn.microsoft.com/powershell/dsc/reference/schemas/config/resource?view=dsc-3.0&preserveView=true#properties-1

# VS Code only
markdownDescription: |
  > [Online Documentation][01]

  Defines an instance of a DSC Resource in a configuration.

  The `resources` property of a DSC Configuration document always includes at least one DSC Resource
  instance. Together, the instances in a configuration define the desired state that DSC can get,
  test, and set on a machine.

  [01]: https://learn.microsoft.com/powershell/dsc/reference/schemas/config/resource?view=dsc-3.0&preserveView=true

defaultSnippets:
  - label:       New resource instance
    description: Defines a new instance of a DSC Resource for the configuration
    body:
      type: $1
      name: $2
      properties:
        '${3:propertyName}': '${4:propertyValue}'
  - label:       New dependent resource instance
    description: >-
      Defines a new instance of a DSC Resource for the configuration that depends on another
      instance.
    body:
      type: $1
      name: $2
      dependsOn: "['[${3:dependencyType}]${4:dependencyName}']"
      properties:
        '${5:propertyName}': '${6:propertyValue}'
