# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema
$schema: https://json-schema.org/draft/2020-12/schema
$id: <HOST>/<PREFIX>/<VERSION>/resource/manifest.schema.yaml

title: Instance Schema
description: >-
  Defines how DSC must validate a JSON blob representing an instance of the
  DSC Resource.

# While the current implementation is somewhat confusing in the schema, I
# think it's actually easier to document. Mainly, the complexity comes from
# the expected object having exactly one property with exclusive key names.
# If a DSC Resource could specify a combination of these values, the schema
# would be less complex.
type: object
oneOf:
  - required: [command]
  - required: [embedded]
properties:
  command:
    title: Instance Schema Command
    description: >-
      Defines how DSC must call the DSC Resource to get the JSON Schema for
      validating a JSON blob representing an instance of the DSC Resource.
    type: object
    required:
      - executable
    properties:
      executable:
        $ref: /<PREFIX>/<VERSION>/definitions/commandExecutable.yaml
      args:
        $ref: /<PREFIX>/<VERSION>/definitions/commandArgs.yaml
  embedded:
    title: Embedded Instance Schema
    description: >-
      Defines the JSON Schema DSC must use to validate a JSON blob
      representing an instance of the DSC Resource.
    type: object
    required:
      - $schema
      - type
      - properties
    properties:
      type:
        title: Instance Type
        description: >-
          Defines the JSON type for an instance of the DSC Resource. DSC Resource instances always
          have the `object` type.
        # Ensures the DSC Resource is always an object
        const: object
      $schema:
        # Ensures the DSC Resource always uses a schema we can understand
        title: DSC Resource instance schema dialect
        description: >-
          Defines which dialect of JSON Schema the DSC Resource is using to validate instances.
        type: string
        format: uri-reference
        enum:
          - https://json-schema.org/draft/2020-12/schema
          - https://json-schema.org/draft/2019-09/schema
          - http://json-schema.org/draft-07/schema#
      $id:
        title: DSC Resource instance schema ID
        description: >-
          Defines the unique ID for the DSC Resource's instance schema.
        # Currently optional - maybe we should require this?
        type: string
        format: uri-reference
      properties:
        # Defines the property validation - requires authors to specify at
        # least one property, ensures all unevaluated properties are of a kind
        # we can understand, and makes the standard properties available to
        # manifest authors.
        title: Instance Properties
        description: >-
          Defines the schema for the DSC Resource's properties. Must define at least one property.
        type: object
        minProperties: 1
        unevaluatedProperties:
          anyOf:
            - $ref: https://json-schema.org/draft/2020-12/schema
            - $ref: https://json-schema.org/draft/2019-09/schema
            - $ref: http://json-schema.org/draft-07/schema#
        properties:
          _ensure:
            title: 'Standard Property: _ensure'
            description: >-
              Indicates that the DSC Resource uses the standard `_ensure` property to specify
              whether an instance should exist with the `Present` and `Absent` enums.
            const:
              $ref: <HOST>/<PREFIX>/<VERSION>/resource/properties/ensure.yaml
          _inDesiredState:
            title: 'Standard Property: _inDesiredState'
            description: >-
              Indicates that the DSC Resource returns this value for it's own `test` method. This
              property is mandatory when the manifest defines the `test` property. It shouldn't
              be included if the DSC Resource relies on DSC's synthetic testing.
            const:
              $ref: <HOST>/<PREFIX>/<VERSION>/resource/properties/inDesiredState.yaml
          _purge:
            title: 'Standard Property: _purge'
            description: >-
              Indicates that the DSC Resource uses the standard `_purge` property to specify
              whether the DSC Resource should remove all non-specified members when it manages
              an array of members or values.
            const:
              $ref: <HOST>/<PREFIX>/<VERSION>/resource/properties/purge.yaml
          _rebootRequested:
            title: 'Standard property: _rebootRequested'
            description: >-
              Indicates that the DSC Resource uses the standard `_rebootRequested` property to
              report whether the machine should be rebooted after the `set` method executes.
            const:
              $ref: <HOST>/<PREFIX>/<VERSION>/resource/properties/rebootRequested.yaml
  url:
    title: Instance Schema URL
    description: >-
      Defines the URL to the DSC Resource's JSON schema for integrating tools.
    type: string
    format: uri

examples:
  - command:
      executable: registry
      args:
        - schema
  - embedded:
      $schema: http://json-schema.org/draft-07/schema#
      title: OSInfo
      type: object
      required: []
      properties:
        $id:
          type: string
        architecture:
          type: [string, "null"]
        bitness:
          $ref: "#/definitions/Bitness"
        codename:
          type: [string, "null"]
        edition:
          type: [string, "null"]
        family:
          $ref: "#/definitions/Family"
        version:
          type: string
      additionalProperties: false
      definitions:
        Bitness:
          type: string
          enum: ["32", "64", "unknown"]
        Family:
          type: string
          enum: [Linux, macOS, Windows]
