# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema
$schema: https://json-schema.org/draft/2020-12/schema
$id: https://schemas.microsoft.com/dsc/2023/07/config/document.parameters.yaml

title: DSC Configuration document parameters
description: >-
  Defines runtime options for the configuration. Users and integrating tools
  can override use the defined parameters to pass alternate values to the
  configuration.
type: object

patternProperties:
  ".":
    title: Parameter
    description: >-
      Defines a runtime option for a DSC Configuration Document.
    type: object
    required:
      - type
    properties:
      type:
        $ref: /dsc/2023/07/definitions/dataType.yaml
      defaultValue:
        title: Default value
        description: >-
          Defines the default value for the parameter.
        $ref: "#/$defs/ValidValueTypes"
      allowedValues:
        title: Allowed values
        description: >-
          Defines a list of valid values for the parameter. If the
          parameter is defined with any other values, it's invalid.
        type: array
        items:
          $ref: "#/$defs/ValidValueTypes"
      description:
        title: Parameter description
        description: >-
          Defines a synopsis for the parameter explaining its purpose.
        type: string
      metadata:
        title: Parameter metadata
        description: >-
          Defines a set of key-value pairs for the parameter. This metadata
          isn't validated.
        type: object
    allOf:
      - if:
          properties:
            type:
              const: int
        then:
          $ref: "#/$defs/IntegerValidationProperties"
      - if:
          oneOf:
            - properties: { type: { const: string } }
            - properties: { type: { const: securestring } }
            - properties: { type: { const: array } }
        then:
          $ref: "#/$defs/LengthValidationProperties"

$defs:
  ValidValueTypes:
    type:
      - string
      - integer
      - object
      - array
      - boolean
  IntegerValidationProperties:
    properties:
      minValue:
        title: Minimum value
        description: >-
          The minimum valid value for an integer type. If defined with the
          `maxValue` property, this value must be less than the value of
          `maxValue`.
        type: integer
        minimum: 0
      maxValue:
        title: Maximum value
        description: >-
          The maximum valid value for an integer type. If defined with the
          `minValue` property, this value must be greater than the value of
          `minValue`.
        type: integer
        minimum: 0
  LengthValidationProperties:
    properties:
      minLength:
        title: Minimum length
        description: >-
          The minimum valid length for a `string`, `securestring`, or `array`.
          If defined with the `maxLength` property, this value must be less
          than the value of `maxLength`.
        type: integer
        minimum: 0
      maxLength:
        title: Maximum length
        description: >-
          The maximum valid length for a `string`, `securestring`, or `array`.
          If defined with the `minLength` property, this value must be less
          than the value of `minLength`.
        type: integer
        minimum: 0